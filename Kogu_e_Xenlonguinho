/*
Kogu está buscando as esferas do dragão para invocar Xenlonguinho e pedir para ele reviver
seu amigo Kuriri, que infelizmente morreu na última batalha dos guerreiros Zê.
Porém Kogu está tendo muita dificuldade para encontrar as esferas, por isso Xenlonguinho que é
seu conhecido há muito tempo, decidiu abrir uma exceção e aceitou ser invocado caso Kogu encontre
todas as esferas cujo o número de divisores da quantidade de estrelas da esfera sejam par.
Por exemplo se existem sete esferas, Kogu não precisaria encontrar as esferas de uma e quatro estrelas,
pois elas tem uma quantidade ímpar de divisores, então ele só precisa pegar 5 esferas para invocar Xenlonguinho.
Como Kogu não é muito bom em contas, ele pediu para você escrever um programa que dado o total de esferas existentes,
mostre a quantidade mínima de esferas que ele precisa procurar.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DIO
{
	class Program
	{
		static void Main(string[] args)
		{
			int numero = int.Parse(Console.ReadLine());

			// Pra cada caso do teste
			for (int i = 0; i < numero; i++)
			{
				int numEsferas = int.Parse(Console.ReadLine());
				int esferasTotais = 0;

				for (int j = 1; j <= numEsferas; j++)
					if (TemQuantDivisoresPar(j))
						esferasTotais++;

				Console.WriteLine(esferasTotais);
			}
		}

		private static bool TemQuantDivisoresPar(int num)
		{
			int quantDivisores = 0;

			for (int j = 1; j <= num; j++)
				if (num % j == 0)
					quantDivisores++;

			return (quantDivisores % 2 == 0);
		}
	}
}
